{"version":3,"file":"static/js/961.2cb434ea.chunk.js","mappings":"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","sources":["hooks/useHttp.js","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nexport const useHttp = ({ fn, recordId, query }) => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    fn({ recordId, query })\n      .then(res => setData(res))\n      .catch(error => {\n        setError(error.message);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [fn, recordId, query]);\n\n  return { data, setData, isLoading, error };\n};\n","import { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { fetchMovieDetails } from 'services/api';\nimport { useHttp } from 'hooks/useHttp';\nimport { Loader, MovieItemDetails } from 'components';\nimport { StyledHeaderSection, StyledSection } from 'styles/Shared';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const params = { fn: fetchMovieDetails, recordId: movieId };\n  const { data, isLoading, error } = useHttp(params);\n\n  if (error) {\n    toast.error(error);\n  }\n\n  return (\n    <>\n      <StyledHeaderSection></StyledHeaderSection>\n      <StyledSection>\n        {isLoading && <Loader />}\n        {data && <MovieItemDetails movie={data} />}\n      </StyledSection>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport { MOVIE_DB_API_BASE_URL } from 'helpers/constants';\n\nconst moviedbApi = axios.create({\n  baseURL: MOVIE_DB_API_BASE_URL,\n  headers: {\n    Authorization: `Bearer ${process.env.REACT_APP_THEMOVIEDB_TOKEN}`,\n  },\n});\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await moviedbApi.get('trending/movie/day');\n\n  return data.results;\n};\n\nexport const fetchMovieDetails = async ({ recordId }) => {\n  const { data } = await moviedbApi.get(`movie/${recordId}`);\n\n  return data;\n};\n\nexport const fetchMovieCasts = async ({ recordId }) => {\n  const { data } = await moviedbApi.get(`movie/${recordId}/credits`);\n\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async ({ recordId }) => {\n  const { data } = await moviedbApi.get(`movie/${recordId}/reviews`);\n\n  return data.results;\n};\n\nexport const findMovies = async ({ query }) => {\n  if (!query) {\n    return [];\n  }\n\n  const { data } = await moviedbApi.get('search/movie', {\n    params: { query },\n  });\n\n  return data.results;\n};\n"],"names":["useHttp","_ref","fn","recordId","query","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","useEffect","then","res","catch","message","finally","movieId","useParams","params","fetchMovieDetails","_useHttp","toast","_jsxs","_Fragment","children","_jsx","StyledHeaderSection","StyledSection","Loader","MovieItemDetails","movie","moviedbApi","axios","baseURL","MOVIE_DB_API_BASE_URL","headers","Authorization","concat","process","fetchTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$moviedbApi$get","_context","prev","next","get","sent","abrupt","results","stop","apply","arguments","_ref3","_callee2","_ref2","_yield$moviedbApi$get2","_context2","_x","fetchMovieCasts","_ref5","_callee3","_ref4","_yield$moviedbApi$get3","_context3","cast","_x2","fetchMovieReviews","_ref7","_callee4","_ref6","_yield$moviedbApi$get4","_context4","_x3","findMovies","_ref9","_callee5","_ref8","_yield$moviedbApi$get5","_context5","_x4"],"sourceRoot":""}