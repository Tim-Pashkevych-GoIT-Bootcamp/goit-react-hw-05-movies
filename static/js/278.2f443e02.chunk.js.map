{"version":3,"file":"static/js/278.2f443e02.chunk.js","mappings":"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","sources":["hooks/useHttp.js","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nexport const useHttp = ({ fn, recordId, query }) => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    fn({ recordId, query })\n      .then(res => setData(res))\n      .catch(error => {\n        setError(error.message);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [fn, recordId, query]);\n\n  return { data, setData, isLoading, error };\n};\n","import { useHttp } from 'hooks/useHttp';\nimport { useSearchParams } from 'react-router-dom';\nimport { findMovies } from 'services/api';\nimport { MoviesSearch, MoviesList, Loader } from 'components';\nimport { StyledHeaderSection, StyledSection } from 'styles/Shared';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const { data, isLoading } = useHttp({ fn: findMovies, query });\n\n  const onSubmit = query => {\n    setSearchParams(query ? { query } : {});\n  };\n\n  return (\n    <>\n      <StyledHeaderSection>\n        <StyledSection>\n          <MoviesSearch onSubmit={onSubmit} />\n        </StyledSection>\n      </StyledHeaderSection>\n      <StyledSection>\n        {isLoading && <Loader />}\n        <section>{data && <MoviesList movies={data} />}</section>\n      </StyledSection>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport { MOVIE_DB_API_BASE_URL } from 'helpers/constants';\n\nconst moviedbApi = axios.create({\n  baseURL: MOVIE_DB_API_BASE_URL,\n  headers: {\n    Authorization: `Bearer ${process.env.REACT_APP_THEMOVIEDB_TOKEN}`,\n  },\n});\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await moviedbApi.get('trending/movie/day');\n\n  return data.results;\n};\n\nexport const fetchMovieDetails = async ({ recordId }) => {\n  const { data } = await moviedbApi.get(`movie/${recordId}`);\n\n  return data;\n};\n\nexport const fetchMovieCasts = async ({ recordId }) => {\n  const { data } = await moviedbApi.get(`movie/${recordId}/credits`);\n\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async ({ recordId }) => {\n  const { data } = await moviedbApi.get(`movie/${recordId}/reviews`);\n\n  return data.results;\n};\n\nexport const findMovies = async ({ query }) => {\n  if (!query) {\n    return [];\n  }\n\n  const { data } = await moviedbApi.get('search/movie', {\n    params: { query },\n  });\n\n  return data.results;\n};\n"],"names":["useHttp","_ref","fn","recordId","query","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","useEffect","then","res","catch","message","finally","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","_useHttp","findMovies","_jsxs","_Fragment","children","_jsx","StyledHeaderSection","StyledSection","MoviesSearch","onSubmit","Loader","MoviesList","movies","moviedbApi","axios","baseURL","MOVIE_DB_API_BASE_URL","headers","Authorization","concat","process","fetchTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$moviedbApi$get","_context","prev","next","sent","abrupt","results","stop","apply","arguments","fetchMovieDetails","_ref3","_callee2","_ref2","_yield$moviedbApi$get2","_context2","_x","fetchMovieCasts","_ref5","_callee3","_ref4","_yield$moviedbApi$get3","_context3","cast","_x2","fetchMovieReviews","_ref7","_callee4","_ref6","_yield$moviedbApi$get4","_context4","_x3","_ref9","_callee5","_ref8","_yield$moviedbApi$get5","_context5","params","_x4"],"sourceRoot":""}